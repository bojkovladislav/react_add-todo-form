{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","todosWithUser","App","useState","setTitle","setUserId","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","setNewTodos","action","method","onSubmit","e","preventDefault","newTodo","Math","max","newTodos","length","htmlFor","type","value","onChange","target","replace","trimStart","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85fda8ed.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, completed, title, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={`TodoInfo ${completed && 'TodoInfo--completed'}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <>\n    {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n  </>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todosWithUser: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n  const [todos, setNewTodos] = useState(todosWithUser);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const newTodo = {\n      id: Math.max(...todos.map(todo => todo.id)) + 1,\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    const newTodos = [...todos, newTodo];\n\n    if (userId && title.length) {\n      setNewTodos(newTodos);\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  const handleChangeTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value\n      .replace(/[^a-z0-9а-я\\s]/gi, '')\n      .trimStart());\n    setHasTitleError(false);\n  };\n\n  const handleChangeName = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setHasUserIdError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleChangeTitle}\n          />\n\n          {hasTitleError\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            name=\"user\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleChangeName}\n          >\n\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(({ id, name }) => (\n              <option value={id} key={id}>{name}</option>\n            ))}\n          </select>\n\n          {hasUserIdError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}